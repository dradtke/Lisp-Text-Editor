@menu
* display-manager::
* drag-context::
* drawable::
* gdk-colormap::
* gdk-image::
* gdk-window::
* graphics-context::
* keymap::
* pango-layout::
* pixbuf::
* pixbuf-animation::
* pixmap::
* visual::
@end menu

@node display-manager
@section display-manager
@Class display-manager
Superclass: @ref{g-object}

Slots:
@itemize
@item @anchor{slot.display-manager.default-display}default-display. Type: @ref{display}. Accessor: @anchor{fn.display-manager-default-display}@code{display-manager-default-display}.
@end itemize


Signals:
@itemize
@item @anchor{signal.display-manager.display-opened}"display-opened". Signature: (instance @ref{display-manager}), (arg-1 @ref{display}) @result{} void. Options: run-last.
@end itemize




@node drag-context
@section drag-context
@Class drag-context
Superclass: @ref{g-object}

Slots:
@itemize
@end itemize


Signals:
@itemize
@end itemize




@node drawable
@section drawable
@Class drawable
Superclass: @ref{g-object}

Subclasses: @ref{gdk-window} @ref{pixmap}

Slots:
@itemize
@end itemize


Signals:
@itemize
@end itemize




@node gdk-colormap
@section gdk-colormap
@Class gdk-colormap
Superclass: @ref{g-object}

Slots:
@itemize
@end itemize


Signals:
@itemize
@end itemize


@node gdk-image
@section gdk-image
@Class gdk-image
Superclass: @ref{g-object}

Slots:
@itemize
@end itemize


Signals:
@itemize
@end itemize


@node gdk-window
@section gdk-window
@Class gdk-window
Superclass: @ref{drawable}

Slots:
@itemize
@end itemize


Signals:
@itemize
@end itemize




@node graphics-context
@section graphics-context
@Class graphics-context
Superclass: @ref{g-object}

Slots:
@itemize
@end itemize


Signals:
@itemize
@end itemize




@node keymap
@section keymap
@Class keymap
Superclass: @ref{g-object}

Slots:
@itemize
@end itemize


Signals:
@itemize
@end itemize




@node pango-layout
@section pango-layout
@Class pango-layout
Superclass: @ref{g-object}

Slots:
@itemize
@end itemize


Signals:
@itemize
@end itemize




@node pixbuf
@section pixbuf
@Class pixbuf
Superclass: @ref{g-object}

Slots:
@itemize
@item @anchor{slot.pixbuf.bits-per-sample}bits-per-sample. Type: @code{integer}. Accessor: @anchor{fn.pixbuf-bits-per-sample}@code{pixbuf-bits-per-sample}.
@item @anchor{slot.pixbuf.colorspace}colorspace. Type: @ref{colorspace}. Accessor: @anchor{fn.pixbuf-colorspace}@code{pixbuf-colorspace}.
@item @anchor{slot.pixbuf.has-alpha}has-alpha. Type: @code{boolean}. Accessor: @anchor{fn.pixbuf-has-alpha}@code{pixbuf-has-alpha}.
@item @anchor{slot.pixbuf.height}height. Type: @code{integer}. Accessor: @anchor{fn.pixbuf-height}@code{pixbuf-height}.
@item @anchor{slot.pixbuf.n-channels}n-channels. Type: @code{integer}. Accessor: @anchor{fn.pixbuf-n-channels}@code{pixbuf-n-channels}.
@item @anchor{slot.pixbuf.pixels}pixels. Type: gpointer. Accessor: @anchor{fn.pixbuf-pixels}@code{pixbuf-pixels}.
@item @anchor{slot.pixbuf.rowstride}rowstride. Type: @code{integer}. Accessor: @anchor{fn.pixbuf-rowstride}@code{pixbuf-rowstride}.
@item @anchor{slot.pixbuf.width}width. Type: @code{integer}. Accessor: @anchor{fn.pixbuf-width}@code{pixbuf-width}.
@end itemize


Signals:
@itemize
@end itemize




@node pixbuf-animation
@section pixbuf-animation
@Class pixbuf-animation
Superclass: @ref{g-object}

Slots:
@itemize
@end itemize


Signals:
@itemize
@end itemize




@node pixmap
@section pixmap
@Class pixmap
Superclass: @ref{drawable}

Slots:
@itemize
@end itemize


Signals:
@itemize
@end itemize




@node visual
@section visual
@Class visual
Superclass: @ref{g-object}

Slots:
@itemize
@end itemize


Signals:
@itemize
@end itemize




